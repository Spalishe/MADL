MANI File Format v1 Specification
Info: Support file for MADL, containing animation data

struct mani_st {
    int id;             // Model format id, e.g., "MANI" (0x4D,0x41,0x4E,0x49)
    int version;        // Format version, e.g., 1
    int checksum;       // Must be identical across related sections (e.g., MADL, MPHY, MTEX)

    int numSequences;   // Number of animation sequences (equivalent to anims_count)
    int seqOffset;      // Offset from start of file to the first mstudioseq_t
};

struct manimseq_st {
    int index;          // Animation sequence index
    char name[32];      // Animation sequence name (null-padded)
    int numFrames;      // Number of frames in the sequence
    byte fps;           // Playback speed in frames per second

    int animOffset;     // Offset from start of sequence structure to animation data (manimdata_st)
};

struct manimdata_st {
    // For each bone in the model (total defined in madl_st.bone_count),
    // animation keyframe data is stored using delta encoding.
    // The array size here is a placeholder; the actual size is determined at runtime.
    mbonepos_t bone[1]; // Array of bone animation data (actual size equals numBones)
};

struct mbonepos_t {
    byte flags;     // Bit mask: indicates which channels (position/rotation) are animated, see MBONEFLAGS
	byte boneIndex; // Bone index																					 
    short posX;     // Quantized delta for X-axis position
    short posY;     // Quantized delta for Y-axis position
    short posZ;     // Quantized delta for Z-axis position
    short rotX;     // Quantized delta for rotation around X-axis
    short rotY;     // Quantized delta for rotation around Y-axis
    short rotZ;     // Quantized delta for rotation around Z-axis
};

enum MBONEFLAGS {
	NOCHANGES = 0x0, 	 // No bone changes, actually there is no mbonepos_t record if this flag equal 0x0, but it existence is not excluded
	POSX	  = 0x1, 	 // X position changed
	POSY	  = 0x2, 	 // Y position changed
	POSZ	  = 0x4, 	 // Z position changed
	ROTX	  = 0x8, 	 // X rotation changed
	ROTY	  = 0x10,	 // Y rotation changed
	ROTZ	  = 0x20,	 // Z rotation changed
}